---
{% raw %}
- name: Provision deployment node
  hosts: deploy
  become: true
  vars:
    _k8s_version: "1.32"
    deb_architecture:
      "arm": "arm"
      "aarch64": "arm64"
      "x86_64": "amd64"

  roles:
  - role: docker

  tasks:
  - name: Remove existing GPG key file to ensure it can be updated
    ansible.builtin.file:
      path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      state: absent

  - name: Download Kubernetes GPG key and place it in /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    become: yes
    ansible.builtin.shell:
      cmd: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ _k8s_version }}/deb/Release.key | gpg --batch --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      executable: /bin/bash
    args:
      creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

  - name: Create /etc/apt/sources.list.d/kubernetes.list file
    copy:
      content: |
        deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ _k8s_version }}/deb/ /
      dest: /etc/apt/sources.list.d/kubernetes.list

  - name: Update apt cache
    apt:
      update_cache: yes

  - name: Install multiple Docker packages
    apt:
      name: "{{ item }}"
      state: present
    loop:
      - kubectl
      - kubeadm

  - name: Install helm (1/2)
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      dest: /tmp/get_helm.sh
      mode: '0555'
  - name: Install helm (2/2)
    ansible.builtin.shell: "/tmp/get_helm.sh"

  - name: Retrieve reference implementation
    ansible.builtin.git:
      repo: https://gitlab.inria.fr/slices-ri/blueprints/post-5g/reference_implementation.git
      dest: reference_implementation
      version: develop
      force: yes

  - name: Prepare venv
    ansible.builtin.shell: python3 -m venv ".venv" && . .venv/bin/activate && pip install -r requirements.txt && python3 -m pip install ansible-core==2.17.2 kubernetes==31.0.0 && ansible-galaxy install -r collections/requirements.yml
    args:
      chdir: reference_implementation

  - name: Create ~/.kube
    ansible.builtin.file:
      path: "{{ ansible_env.HOME }}/.kube/"
      state: directory

  - name: Copy custom Kube config
    ansible.builtin.copy:
      src: '{{ _kube_config_local_path }}'
      dest: ~/.kube/config
{% endraw %}