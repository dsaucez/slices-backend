#!/bin/bash

# Function to display usage information
usage() {
  echo "Usage: $0 experiment [get|launch] <experiment_name>"
  exit 1
}

get_experiment_id(){
  local experiment_name="$1"
  local experiment_id=$(slices experiment show $experiment_name --format json |jq .id | tr -d \")

  echo $experiment_id
}

# Function to fetch experiment details
get_experiment() {
  local project_id="$1"
  local experiment_name="$2"
  echo "Fetching details for experiment $project_id / $experiment_name"

  experiment_id=$(get_experiment_id $experiment_name)

  echo $experiment_id

  DIR=xp/$project_id/$experiment_name/

  mkdir -p $DIR
  cd $DIR

  wget -q https://gitlab.inria.fr/slices-ri/blueprints/post-5g/reference_implementation/-/archive/develop/reference_implementation-develop.tar.gz
  tar -xzf reference_implementation-develop.tar.gz
  rm reference_implementation-develop.tar.gz


  TOKEN="$(slices auth id-token pos)"
  curl -s -X GET "http://172.29.7.10:8000/pos/script/${experiment_id}"   -H 'accept: application/json' -H "Bearer: ${TOKEN}" --output ${experiment_id}.zip
  unzip -qq -o -d reference_implementation-develop/ ${experiment_id}.zip
  chmod a+r -R reference_implementation-develop/

  echo "Details for experiment $experiment_name saved in $DIR"
}

# Function to launch the experiment
launch_experiment() {
  local project_id="$1"
  local experiment_name="$2"
  
  echo "Launching experiment $project_id / $experiment_name"

  DIR=xp/$project_id/$experiment_name/

  cd $DIR/reference_implementation-develop
  chmod u+x pos/deploy.sh
  pos/deploy.sh
}

# Check that the correct number of arguments are passed
if [ "$#" -lt 3 ]; then
  echo "Error: Insufficient arguments."
  usage
fi

# Check that the first argument is "experiment"
if [ "$1" != "experiment" ]; then
  echo "Error: The first argument must be 'experiment'."
  usage
fi

# Assign the second argument to a command and the third to experiment_name
command="$2"
experiment_name="$3"
project_id=$(slices project  show -f json | jq .name | tr -d \")

# Handle the "get" or "launch" commands with functions
case "$command" in
  get)
    get_experiment "$project_id" "$experiment_name"
    ;;
  launch)
    launch_experiment "$project_id"  "$experiment_name"
    ;;
  *)
    echo "Error: Invalid command '$command'."
    usage
    ;;
esac